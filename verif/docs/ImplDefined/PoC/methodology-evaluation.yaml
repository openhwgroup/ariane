!impl_specific_db
context:
    spec:
        repo:     https://github.com/riscv/riscv-isa-manual
        rev:      2023-10-02
    docs:
        repo:     https://github.com/openhwgroup/cva6.git
        rev:      9267d14f2eb7d79b89814dc546156067e7c5c35f
        config:   cv32a65x
    rtl:
        repo:     https://github.com/openhwgroup/cva6.git
        rev:      9267d14f2eb7d79b89814dc546156067e7c5c35f
        config:   cv32a65x
    spike:
        repo:     https://github.com/openhwgroup/core-v-verif
        rev:      d46633081bfe67daed840d953e0d759241be6ff0
behaviors: !!omap
- MISA_WritableStdExtensionBits: !impl_defined
    tag:  MISA_WritableStdExtensionBits_git2023-10-02
    spec:
      url:        https://github.com/riscv/riscv-isa-manual/blob/2023-10-02/src/machine.adoc?plain=1#L69C72-L71C56
      value:      any_subset("A..Z")
      normative:  y
    relevant:     y # y|n
    relevant_why: "Affects subsequent code execution if bits are writable."
    behavior:
      docs:
        addressed: y   # tbd/y/n
        compliant: y   # y/n
        correct:   y   # y/n, if 'n': add comment
        value:     ""  #
      rtl:
        addressed: y   # tbd/y/n
        compliant: y   # y/n
        correct:   y   # y/n
        value:     ""  # no modifiable extension bits
      spike:
        addressed:  y          # y/n/unknown
        compliant:  y          # y/n/unknown
        correct:    y          # y/n/unknown
        parametric: y           # There's a way to change behavior
        values:
          default:  "MAFDQCHV" # default behavior irrespective of currently 'implemented' extensions
          explicit:
          -
            value:    ""       # Param settings needed to achieve value ""
            params:
            - # Enable the parameter that controls writability of misa.extensions
              name : "/top/cores/misa_we_enable"
              value: "true"
            - # Disable writability of misa.extensions altogether
              name: "/top/cores/misa_we"
              value: "false"
        comment: "In the future Spike may need to specify any valid explicit combination of standard extensions."
- MSTATUS_FS_may_be_ro_zero_if_no_F_ext_but_S_ext_present: !impl_defined
    tag: MSTATUS_FS_may_be_ro_zero_if_no_F_ext_but_S_ext_present_2023-10-02
    spec:
      url:        https://github.com/riscv/riscv-isa-manual/blob/2023-10-02/src/machine.adoc?plain=1#L758C17-L759C34
      value:      y
      normative:  y
    relevant:     y
    relevant_why: "Implementation defines CSR content and behavior."
    behavior:
      docs:
        addressed: y   # tbd/y/n
        compliant: y   # y/n
        correct:   y   # y/n, if 'n': add comment
        value:     y  #
      rtl:
        addressed: y   # tbd/y/n
        compliant: y   # y/n
        correct:   y   # y/n, if 'n': add comment
        value:     y   # y/n
      spike:
        addressed: y   # tbd/y/n
        compliant: y   # y/n
        correct:   tbd # y/n/tbd, if 'n': add comment
        parametric: y  # There's a way to change behavior
        values:
          default: n   # no way to "deimplement" F and S extensions
          explicit:
          -
            value: y   # Param settings needed to achieve value 'y'
            params:
            - # Disable writability of SSTATUS.FS altogether (default value to be determined)
              # FIXME TODO: Need a parameter that explicitly makes MSTATUS.FS R/O zero.
              name: "/top/cores/status_fs_field_we"
              value: "false"
            - # Enable the parameter that controls writability of SSTATUS.FS.
             # FIXME TODO: Need control over MSTATUS.FS, not SSTATUS.FS.
             name: "/top/cores/status_fs_field_we_enable"
             value: "true"
        comment: "BUG: Spike only allows control of SSTATUS.FS, *not* MSTATUS.FS"
