before_script:
  # paths to local or network installations (the riscv toolchain and
  # verilator are not built in the ci job as in travis)
  - export QUESTASIM_HOME=/usr/pack/modelsim-10.6b-kgf/questasim/
  - export QUESTASIM_VERSION=-10.6b
  - export QUESTASIM_FLAGS=-noautoldlibpath
  - export CXX=g++-7.2.0 CC=gcc-7.2.0
  - export RISCV=/scratch2/gitlabci/riscv_install
  - export VERILATOR_ROOT=/scratch2/gitlabci/verilator-3.924
  # setup dependent paths
  - export PATH=${RISCV}/bin:$VERILATOR_ROOT/bin:${PATH}
  - export LIBRARY_PATH=$RISCV/lib
  - export LD_LIBRARY_PATH=$RISCV/lib:/usr/pack/gcc-7.2.0-af/linux-x64/lib64/
  - export C_INCLUDE_PATH=$RISCV/include:$VERILATOR_ROOT/include:/usr/pack/gcc-7.2.0-af/linux-x64/include
  - export CPLUS_INCLUDE_PATH=$RISCV/include:$VERILATOR_ROOT/include:/usr/pack/gcc-7.2.0-af/linux-x64/include
  # number of parallel jobs to use for make commands and simulation
  - export NUM_JOBS=4
  - which java
  - java -version
  - which git
  - git --version
  - ci/make-tmp.sh
  - git submodule init
  - git submodule update --recursive

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - standard
  - serpent

###################################
# prepare
build:
  stage: build
  script:
    - ci/build-riscv-tests.sh
    - ci/get-torture.sh
    - make clean
    # this currently does not work with the current runner version...
    #- make torture-gen
  artifacts:
      paths:
        - tmp

###################################
# tests with standard cache system

# rv64ui-p-* and rv64ui-v-* tests
asm-quest:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-asm-tests batch-mode=1
  dependencies:
    - build

amo-quest:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-amo-tests batch-mode=1
  dependencies:
    - build

fp-quest:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-fp-tests batch-mode=1
  dependencies:
    - build

bench-quest:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-benchmarks batch-mode=1
  dependencies:
    - build

# rv64ui-p-* tests
asm1-ver:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-asm-tests1-verilator
  dependencies:
    - build

# rv64ui-v-* tests
asm2-ver:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-asm-tests2-verilator
  dependencies:
    - build

# rv64um-*-* tests
mul-ver:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-mul-verilator
  dependencies:
    - build

# atomics
amo-ver:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-amo-verilator
  dependencies:
    - build

# floating point
fp-ver:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-fp-verilator 
  dependencies:
    - build

bench-ver:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-benchmarks-verilator
  dependencies:
    - build

bench-ver:
  stage: standard
  script:
    - make -j${NUM_JOBS} run-benchmarks-verilator
  dependencies:
    - build

# torture:
#   stage: standard
#   script:
#     - make torture-rtest batch-mode=1
#     - make torture-rtest-verilator
#   dependencies:
#     - build

serdiv-quest:
  stage: standard
  script:
    - cd tb/tb_serdiv/
    - make simc
    - "grep 'CI: PASSED' summary.rep"
  dependencies:
    - build

###################################
# tests with serpent cache system

s-asm-quest:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-asm-tests defines=PITON_ARIANE+AXI64_CACHE_PORTS batch-mode=1
  dependencies:
    - build

# atomics
s-amo-quest:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-amo-tests defines=PITON_ARIANE+AXI64_CACHE_PORTS batch-mode=1
  dependencies:
    - build

# floating point    
s-fp-quest:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-fp-tests defines=PITON_ARIANE+AXI64_CACHE_PORTS batch-mode=1
  dependencies:
    - build

s-bench-quest:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-benchmarks defines=PITON_ARIANE+AXI64_CACHE_PORTS batch-mode=1
  dependencies:
    - build

# rv64ui-p-* tests
s-asm1-ver:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-asm-tests1-verilator defines=PITON_ARIANE+AXI64_CACHE_PORTS
  dependencies:
    - build

# rv64ui-v-* tests
s-asm2-ver:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-asm-tests2-verilator defines=PITON_ARIANE+AXI64_CACHE_PORTS
  dependencies:
    - build

# rv64um-*-* tests
mul-ver:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-mul-verilator defines=PITON_ARIANE+AXI64_CACHE_PORTS
  dependencies:
    - build

# atomics
amo-ver:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-amo-verilator defines=PITON_ARIANE+AXI64_CACHE_PORTS
  dependencies:
    - build

# floating point
s-fp-ver:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-fp-verilator defines=PITON_ARIANE+AXI64_CACHE_PORTS
  dependencies:
    - build

s-bench-ver:
  stage: serpent
  script:
    - make -j${NUM_JOBS} run-benchmarks-verilator defines=PITON_ARIANE+AXI64_CACHE_PORTS
  dependencies:
    - build

s-icache-quest:
  stage: serpent
  script:
    - cd tb/tb_serpent_icache/
    - make simc
    - "grep 'CI: PASSED' summary.rep"

s-dcache-quest:
  stage: serpent
  script:
    - cd tb/tb_serpent_dcache/
    - make simc
    - "grep 'CI: PASSED' RD0_summary.rep"
    - "grep 'CI: PASSED' RD1_summary.rep"
    - "grep 'CI: PASSED' TB_MEM_summary.rep"
  dependencies:
    - build

# s-torture:
#   stage: serpent
#   script:
#     - make torture-rtest           defines=PITON_ARIANE+AXI64_CACHE_PORTS batch-mode=1
#     - make torture-rtest-verilator defines=PITON_ARIANE+AXI64_CACHE_PORTS
#   dependencies:
#     - build
